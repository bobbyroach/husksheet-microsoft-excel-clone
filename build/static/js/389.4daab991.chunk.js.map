{"version":3,"file":"static/js/389.4daab991.chunk.js","mappings":"uKAkBA,MAAMA,UAAcC,EAAAA,UAChBC,WAAAA,CAAYC,GACRC,MAAMD,GACNE,KAAKC,MAAQ,CACTC,SAAU,GACVC,SAAU,GACVC,aAAc,GACdC,SAAS,GAEbL,KAAKM,YAAcN,KAAKM,YAAYC,KAAKP,KAC7C,CAEAQ,WAAAA,CAAYC,GACRT,KAAKU,SAAS,CAAER,SAAUO,GAC9B,CAEAE,WAAAA,CAAYC,GACRZ,KAAKU,SAAS,CAAEP,SAAUS,GAC9B,CAEA,iBAAMN,GAEF,IACI,MAAMO,EAAcb,KAAKC,MAAMC,SAAW,IAAMF,KAAKC,MAAME,SACrDW,EAAUC,KAAKF,GAGfG,SAFaC,EAAAA,GAAkBH,GAEhB,IAAII,EAAAA,EAAKlB,KAAKC,MAAMC,SAAUF,KAAKC,MAAME,WAC9DH,KAAKF,MAAMqB,kBAAkBH,GAC7BhB,KAAKU,SAAS,CAAEN,aAAc,IAElC,CAAE,MAAOgB,GACLpB,KAAKU,SAAS,CAACL,SAAS,IACxBL,KAAKU,SAAS,CAAEN,aAAc,gCAClC,CACJ,CAEAiB,MAAAA,GACI,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACvBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,SAAC,sBAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,eACHF,EAAAA,EAAAA,KAAA,SACII,YAAY,WACZC,SAAWC,GAAM5B,KAAKQ,YAAYoB,EAAEC,OAAOC,OAC3CA,MAAO9B,KAAKC,MAAMC,eAG1BuB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,eACHF,EAAAA,EAAAA,KAAA,SACII,YAAY,WACZC,SAAWC,GAAM5B,KAAKW,YAAYiB,EAAEC,OAAOC,OAC3CA,MAAO9B,KAAKC,MAAME,cAGzBH,KAAKC,MAAMI,UAAWiB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,SACxCxB,KAAKC,MAAMG,mBAGpBkB,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAeQ,QAAS/B,KAAKM,YAAYkB,SAAC,cAM5E,EAGJ,S","sources":["pages/Login.tsx"],"sourcesContent":["import { Component } from \"react\";\nimport './pagesCSS/loginPage.css'\nimport User from \"../backend/User\";\nimport * as client from \"../backend/controller/client\"\n// @author Robert Roach\n\ninterface LoginProps {\n    updateCurrentUser: (user: User) => void,\n    user: User | null,\n}\n\ninterface LoginState {\n    errorMessage: string,\n    password: string,\n    username: string,\n    isError: boolean\n}\n\nclass Login extends Component<LoginProps, LoginState> {\n    constructor(props: LoginProps) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            errorMessage: '',\n            isError: false\n        }\n        this.handleLogin = this.handleLogin.bind(this)\n    }\n\n    setUsername(usernameInput: string): void {\n        this.setState({ username: usernameInput }) \n    }\n\n    setPassword(passwordInput: string): void {\n        this.setState({ password: passwordInput }) \n    }\n\n    async handleLogin() {        \n        // Login authentication logic\n        try {\n            const loginString = this.state.username + ':' + this.state.password\n            const encoded = btoa(loginString)\n            const user = await client.checkLogin(encoded)\n\n            const loggedInUser = new User(this.state.username, this.state.password);\n            this.props.updateCurrentUser(loggedInUser)\n            this.setState({ errorMessage: '' })\n            \n        } catch (error) {\n            this.setState({isError: true})\n            this.setState({ errorMessage: 'Invalid username or password' })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"login-page\">\n                <div className=\"login-bubble\">\n                    <div className=\"login-title\">Husksheets Login</div>\n                    <div className=\"login-inputs\">\n                        <div className='input-field'>\n                            <p>Username:</p>\n                            <input \n                                placeholder=\"Username\"\n                                onChange={(e) => this.setUsername(e.target.value)}\n                                value={this.state.username}\n                            />\n                        </div>\n                        <div className='input-field'>\n                            <p>Password:</p>\n                            <input \n                                placeholder=\"Password\"\n                                onChange={(e) => this.setPassword(e.target.value)}\n                                value={this.state.password}\n                            />\n                        </div>\n                        {this.state.isError && <div className='error'>\n                            {this.state.errorMessage}\n                        </div>}\n                    </div>\n                    <button className=\"login-button\" onClick={this.handleLogin}>\n                        Login\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Login"],"names":["Login","Component","constructor","props","super","this","state","username","password","errorMessage","isError","handleLogin","bind","setUsername","usernameInput","setState","setPassword","passwordInput","loginString","encoded","btoa","loggedInUser","client","User","updateCurrentUser","error","render","_jsx","className","children","_jsxs","placeholder","onChange","e","target","value","onClick"],"sourceRoot":""}