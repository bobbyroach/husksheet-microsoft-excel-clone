{"version":3,"file":"static/js/321.3195f454.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/clsx/dist/clsx.m.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-virtualized/dist/es/Grid/types.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/types.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/List/types.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  for (var key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import * as React from 'react';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isVisible\": PropTypes.bool.isRequired,\n  \"key\": PropTypes.string.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired,\n  \"style\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.node.isRequired);\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.object.isRequired);\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": PropTypes.objectOf(PropTypes.node.isRequired).isRequired,\n  \"cellRenderer\": PropTypes.func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"deferredMeasurementCache\": PropTypes.object,\n  \"horizontalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"styleCache\": PropTypes.objectOf(PropTypes.object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"visibleColumnIndices\": PropTypes.object.isRequired,\n  \"visibleRowIndices\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOfType([PropTypes.func, PropTypes.number]);\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": PropTypes.number.isRequired,\n  \"clientWidth\": PropTypes.number.isRequired,\n  \"scrollHeight\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"scrollWidth\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": PropTypes.bool.isRequired,\n  \"vertical\": PropTypes.bool.isRequired,\n  \"size\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": PropTypes.number.isRequired,\n  \"columnOverscanStopIndex\": PropTypes.number.isRequired,\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStartIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStopIndex\": PropTypes.number.isRequired,\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": PropTypes.oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": PropTypes.oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": PropTypes.number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": PropTypes.number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": PropTypes.number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": PropTypes.number.isRequired,\n  \"overscanStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": PropTypes.number,\n  \"stop\": PropTypes.number\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellPosition };\nexport { bpfrpt_proptype_CellRendererParams };\nexport { bpfrpt_proptype_CellRenderer };\nexport { bpfrpt_proptype_CellCache };\nexport { bpfrpt_proptype_StyleCache };\nexport { bpfrpt_proptype_CellRangeRendererParams };\nexport { bpfrpt_proptype_CellRangeRenderer };\nexport { bpfrpt_proptype_CellSizeGetter };\nexport { bpfrpt_proptype_CellSize };\nexport { bpfrpt_proptype_NoContentRenderer };\nexport { bpfrpt_proptype_Scroll };\nexport { bpfrpt_proptype_ScrollbarPresenceChange };\nexport { bpfrpt_proptype_RenderedSection };\nexport { bpfrpt_proptype_OverscanIndicesGetterParams };\nexport { bpfrpt_proptype_OverscanIndices };\nexport { bpfrpt_proptype_OverscanIndicesGetter };\nexport { bpfrpt_proptype_Alignment };\nexport { bpfrpt_proptype_VisibleCellRange };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","var bpfrpt_proptype_Index = process.env.NODE_ENV === 'production' ? null : {\n  \"index\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_PositionInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"x\": PropTypes.number.isRequired,\n  \"y\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_SizeAndPositionInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"height\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"x\": PropTypes.number.isRequired,\n  \"y\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_SizeInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"height\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_Index };\nexport { bpfrpt_proptype_PositionInfo };\nexport { bpfrpt_proptype_ScrollPosition };\nexport { bpfrpt_proptype_SizeAndPositionInfo };\nexport { bpfrpt_proptype_SizeInfo };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import * as React from 'react';\nvar bpfrpt_proptype_RowRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"index\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isVisible\": PropTypes.bool.isRequired,\n  \"key\": PropTypes.string.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"style\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_RowRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_RenderedRows = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": PropTypes.number.isRequired,\n  \"overscanStopIndex\": PropTypes.number.isRequired,\n  \"startIndex\": PropTypes.number.isRequired,\n  \"stopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": PropTypes.number.isRequired,\n  \"scrollHeight\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_RowRendererParams };\nexport { bpfrpt_proptype_RowRenderer };\nexport { bpfrpt_proptype_RenderedRows };\nexport { bpfrpt_proptype_Scroll };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";"],"names":["instance","Constructor","TypeError","_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","e","toPrimitive","call","String","Number","_defineProperties","target","props","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_getPrototypeOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_setPrototypeOf","p","_inherits","subClass","superClass","create","value","obj","componentWillMount","state","this","getDerivedStateFromProps","undefined","setState","componentWillReceiveProps","nextProps","prevState","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","name","newApiName","componentDidUpdate","maybeSnapshot","snapshot","_extends","assign","arguments","source","hasOwnProperty","apply","f","n","Array","isArray","__suppressDeprecationWarning","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","_objectWithoutProperties","excluded","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","_ref2","_lastMeasuredIndex","index","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","cachedIndices","callback","indices","keys","allInitialized","every","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","document","createElement","win","scrollbarSize","recalc","canUseDOM","scrollDiv","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","React","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","createDetectElementResize","nonce","hostWindow","_window","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","offsetHeight","scrollListener","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","_arrayLikeToArray","arr","len","arr2","_unsupportedIterableToArray","minLen","slice","from","test","_toConsumableArray","iter","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","_slicedToArray","l","u","a","next","done","accessibilityOverscanIndicesGetter","ge","c","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","hi","cb","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","IntervalTree","root","result","insert","weight","bounds","remove","queryPoint","queryInterval","tproto","get","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","keyMapper","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","ASC","DESC","SortIndicator","sortDirection","SortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","minWidth","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getScrollOffset","documentElement","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","container","containerElement","elementRect","containerRect","_elementRect","_containerRect","getPositionOffset","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll"],"sourceRoot":""}